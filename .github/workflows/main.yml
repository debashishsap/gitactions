name: Deploy to Cloud Foundry
on:
  push:
    branches:
    - main
jobs:
    build:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - name: Use Node.js
          uses: actions/setup-node@v1
          with:
            node-version: 16
        
        - name: Install MTA Build Tool
          run: npm install
               npm install -g mbt

        - name: Build MTA
          run: mbt build -p cf
        
        - name: Upload Artifact
          uses: actions/upload-artifact@master
          with:
            name: mta
            path: ./mta_archives/gitactions_0.0.1.mtar        
                   
    deploy:
     needs: build
     runs-on: ubuntu-latest
     steps:        
        - name: Download Artifact
          uses: actions/download-artifact@master
          with:
            name: mta
            path: ./
        
        - name: Get MTA path
          run: |
            ls -ltr
            echo {{ github.workspace }}

        - name: Install CF
          run: |
            wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add -
            echo "deb https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
            sudo apt-get update
            sudo apt-get install cf8-cli
            cf install-plugin -f https://github.com/cloudfoundry-incubator/multiapps-cli-plugin/releases/latest/download/multiapps-plugin.linux64              

        - name: CF login
          run: cf login -a ${{ secrets.CF_API }} -u ${{ secrets.CF_USERNAME }} -p ${{ secrets.CF_PASSWORD }} -o ${{ secrets.CF_ORG }} -s ${{ secrets.CF_SPACE }}

        - name: Deploy to Cloud Foundry           
          run: |
            cf deploy ./gitactions_0.0.1.mtar

        - name: CURL
          run: |
            curl -V
            sudo apt-get install jq

        - name: Token
          run: |        
           TOKEN=$(curl -XPOST -H 'Accept: application/json' -u '${{ secrets.TMS_CLIENTID }}:${{ secrets.TMS_CLIENTSECRET }}' -H 'Content-Type: application/x-www-form-urlencoded' '${{ secrets.TMS_TOKEN }}?grant_type=client_credentials&response_type=token' | sed -n '/ *"access_token": *"/ {s///; s/{//g ;s/".*//; p; }')
           echo $TOKEN
           echo '${{ vars.TMS_URL }}/v2/files/upload'
           echo $TMS_URL'/v2/files/upload'
           fileId=$(curl -s --location --request POST '${{ vars.TMS_URL }}/v2/files/upload' --header "Authorization: Bearer $TOKEN" -F 'file=@./gitactions_0.0.1.mtar' | jq -r '.fileId')
           echo $fileId           
           response=$(curl -s --request POST '${{ vars.TMS_URL }}/v2/nodes/upload' --header "Authorization: Bearer $TOKEN" --header "Content-Type: application/json" -d '{"nodeName": "TMS_DEV","contentType": "MTA","storageType": "FILE","entries": [{"uri": '"$fileId"'}], "description": ${{ github.event.head_commit.message }},  "namedUser": "GitHub" }')
           echo $response